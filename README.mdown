### Graboid ###

![Graboid](http://github.com/twoism/graboid/raw/master/spec/fixtures/graboid.jpg "Graboid")

  Simply awesome web scraping. Better docs later. See specs.

### Installation ###


    gem install graboid


### Usage ###

    %w{rubygems graboid}.each { |f| require f }

    class RedditEntry
      include Graboid::Entity

      selector '.entry'

      set :title
      set :domain, :selector => '.domain a'
      set :link,   :selector => '.title' do |entry| 
        entry.css('a').first['href'] 
      end
      
      pager do |doc|
        doc.css('p.nextprev a').select{|a| a.text =~ /next/i  }.first['href']
      end

    end

    RedditEntry.source = 'http://reddit.com'

    RedditEntry.all(:max_pages => 2).each do |p| 
      puts "title: #{p.title}"
      puts "domain: #{p.domain}"
      puts "link: #{p.link}"
    end

##Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

## Copyright

Copyright (c) 2010 Christopher Burnett. See LICENSE for details.